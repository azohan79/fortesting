name: CI Pipeline

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest requests junitparser

      - name: Run pytest with XML output
        run: |
          pytest tests/ --junitxml=pytest_results.xml

      - name: Upload Pytest Results
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results
          path: pytest_results.xml

  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install coverage

      - name: Run tests with coverage
        run: |
          coverage run -m pytest
          coverage xml

      - name: Prepare sonar-project.properties
        run: |
          echo "sonar.projectKey=azohan79_fortesting" > sonar-project.properties
          echo "sonar.organization=azohan79" >> sonar-project.properties
          echo "sonar.projectName=fortesting" >> sonar-project.properties
          echo "sonar.projectVersion=1.0" >> sonar-project.properties
          echo "sonar.sources=." >> sonar-project.properties
          echo "sonar.sourceEncoding=UTF-8" >> sonar-project.properties
          echo "sonar.python.coverage.reportPaths=coverage.xml" >> sonar-project.properties
          echo "sonar.report.export.path=sonar-report.json" >> sonar-project.properties

      - name: SonarCloud Scan with JSON Export
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Upload Sonar Report
        uses: actions/upload-artifact@v4
        with:
          name: sonar-report
          path: sonar-report.json



  zap_scan:
    name: OWASP ZAP Manual Scan
    runs-on: ubuntu-latest
    needs: [test, sonarcloud]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run ZAP Full Scan
        run: |
          docker run --rm \
            --user root \
            -v $(pwd):/zap/wrk \
            ghcr.io/zaproxy/zaproxy:stable \
            sh -c "\
              zap-full-scan.py \
                -t http://test.anywatt.es \
                -J zap_report.json \
                -w zap_report.md \
                -r zap_report.html \
                -a || true"

      - name: Upload ZAP Reports
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: |
            zap_report.json
            zap_report.md
            zap_report.html

  gpt_analysis:
    name: Generate GPT Security QA Report
    runs-on: ubuntu-latest
    needs: [zap_scan]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install GPT dependencies
        run: |
          pip install openai junitparser

      - name: Run GPT Analysis Script
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          python .github/scripts/gpt_analysis.py

      - name: Upload GPT Report
        uses: actions/upload-artifact@v4
        with:
          name: gpt-report
          path: gpt_report.html
