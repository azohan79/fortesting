name: CI Pipeline

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with: { python-version: '3.10' }
      - run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest requests junitparser
      - run: pytest tests/ --junitxml=pytest_results.xml
      - uses: actions/upload-artifact@v4
        with: { name: pytest-results, path: pytest_results.xml }

  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with: { python-version: '3.10' }
      - run: |
          pip install -r requirements.txt
          pip install coverage requests
      - run: |
          coverage run -m pytest
          coverage xml
      - uses: SonarSource/sonarcloud-github-action@v2
        with: { projectBaseDir: '.' }
        env: { SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} }
      - run: python .github/scripts/get_sonar_report.py
        env: { SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} }
      - uses: actions/upload-artifact@v4
        with: { name: sonar-report, path: sonar-report.json }

  zap_scan:
    name: OWASP ZAP Manual Scan
    runs-on: ubuntu-latest
    needs: [test, sonarcloud]
    steps:
      - uses: actions/checkout@v3
      - run: |
          docker run --rm --user root -v $(pwd):/zap/wrk \
            ghcr.io/zaproxy/zaproxy:stable \
            sh -c "zap-full-scan.py -t http://test.anywatt.es \
              -J zap_report.json -w zap_report.md -r zap_report.html -a || true"
      - uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: |
            zap_report.json
            zap_report.md
            zap_report.html

  gpt_analysis:
    name: Generate GPT Report
    runs-on: ubuntu-latest
    needs: [zap_scan]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with: { python-version: '3.10' }
      - run: |
          python -m pip install --upgrade pip
          pip install openai junitparser requests
      - env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: python .github/scripts/gpt_analysis.py
      - uses: actions/upload-artifact@v4
        with: { name: gpt-report, path: gpt_report.html }
