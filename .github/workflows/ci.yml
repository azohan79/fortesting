name: CI Pipeline

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest junitparser

      - name: Run Pytest with XML output
        run: |
          mkdir -p test-reports
          pytest tests/ --junitxml=test-reports/pytest_results.xml || true

      - name: Upload Pytest Report
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results
          path: test-reports/pytest_results.xml

  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install coverage

      - name: Run coverage & create XML
        run: |
          coverage run -m pytest || true
          coverage xml -o coverage.xml

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage.xml

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  zap_scan:
    name: OWASP ZAP Scan
    runs-on: ubuntu-latest
    needs: [test, sonarcloud]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run ZAP Scan
        run: |
          mkdir -p zap-reports
          docker run --rm \
            --user root \
            -v $(pwd)/zap-reports:/zap/wrk \
            ghcr.io/zaproxy/zaproxy:stable \
            sh -c "\
              zap-full-scan.py \
                -t http://test.anywatt.es \
                -J zap_report.json \
                -w zap_report.md \
                -r zap_report.html \
                -a || true"

      - name: Upload ZAP Reports
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: |
            zap-reports/zap_report.json
            zap-reports/zap_report.md
            zap-reports/zap_report.html

  gpt_analysis:
    name: Generate GPT Report
    runs-on: ubuntu-latest
    needs: [zap_scan]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install GPT dependencies
        run: |
          pip install openai junitparser

      - name: Run GPT Analysis Script
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          python .github/scripts/gpt_analysis.py

      - name: Upload GPT Report
        uses: actions/upload-artifact@v4
        with:
          name: gpt-report
          path: gpt_report.html
